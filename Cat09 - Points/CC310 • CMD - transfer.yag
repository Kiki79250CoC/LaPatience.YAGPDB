{{$args := parseArgs 2 (print "`" .ServerPrefix .CCTrigger " ‹@UserOrID› ‹Amount›`") (carg "userid" "UID") (carg "int" "Amount")}}
{{$ImDB := (dbGet 0 "ImmunDB").Value}}

{{$FUsr := .User.ID}}
{{$DUsr := $args.Get 0}}
{{$FUv2 := ($DUv2 := "")}}

{{$EC := ($PremLv := 0)}}

{{if and ($FMbr := getMember $FUsr) ($DMbr := getMember $DUsr)}}
  {{$FSancProfile := (dbGet $FUsr "SancProfile").Value}}
  {{$DSancProfile := (dbGet $DUsr "SancProfile").Value}}

  {{range $ID, $r := (cslice 0 967188575005315132 1079418386511040572)}} {{if in $DMbr.Roles $r}} {{$PremLv = $ID}} {{end}} {{end}}
  {{$PtPlaf := toInt (index $ImDB.PlafLmt $PremLv)}}

  {{$FUsrIsLv10orHigher := ""}}
  {{$DUsrIsLv10orHigher := ""}}
  {{range (cslice 925745243180118034 925745253087076392 925756577510748210 925758251662987264 925761123695886376 925745256207618139 925766056650362991 925767790034583552 925769441747296316 1054107222856192172 1106395328447533077)}}
    {{if in $FMbr.Roles .}} {{$FUsrIsLv10orHigher = .}} {{end}}
    {{if in $DMbr.Roles .}} {{$DUsrIsLv10orHigher = .}} {{end}}
  {{end}}

  {{$PtsFU := or (toInt (dbGet $FUsr "Points").Value) 0}}
  {{if not $PtsFU}} {{$PtsFU = index (or ($FUv2 = (dbGet $FUsr "points").Value) (cslice 0 0)) 0}} {{end}}

  {{$PtsDU := or (toInt (dbGet $DUsr "Points").Value) 0}}
  {{if not $PtsDU}} {{$PtsDU = index (or ($DUv2 = (dbGet $DUsr "points").Value) (cslice 0 0)) 0}} {{end}}

  {{$FrozAcFU := ($FrozAcDU := false)}}
  {{if $FrzSldFU := $FSancProfile.ActiveWarns.FrzSld}} {{$FrozAcFU = lt currentTime.Unix $FrzSldFU.ExpiresAt}} {{end}}
  {{if $FrzSldDU := $DSancProfile.ActiveWarns.FrzSld}} {{$FrozAcDU = lt currentTime.Unix $FrzSldDU.ExpiresAt}} {{end}}

  {{if and (not (eq $DUsr $FUsr)) (gt ($args.Get 1) 0) (ge $PtsFU ($args.Get 1)) $FUsrIsLv10orHigher $DUsrIsLv10orHigher (not $FrozAcFU) (not $FrozAcDU) (not (and $FUv2 $DUv2))  (not ($IsBot := $DMbr.User.Bot))}}
    {{$VirAmt := $args.Get 1}}
    {{if and (ge (add $PtsDU $VirAmt) $PtPlaf) (not (in $ImDB.NoPlaf $DUsr))}} {{$VirAmt = sub $VirAmt (sub (add $PtsDU $VirAmt) $PtPlaf)}} {{end}}

    {{if ge $VirAmt 1}}
      {{dbSet $FUsr "Points" (sub $PtsFU $VirAmt)}}
      {{dbSet $DUsr "Points" (add $PtsDU $VirAmt)}}

      {{if $FUv2}} {{dbDel $FUsr "points"}} {{end}}
      {{if $DUv2}} {{dbDel $DUsr "points"}} {{end}}

      {{$embed := cembed
        "title" (print "✓ Le transfert a été effectué avec succès")
        "color" 0x00b04f
        "fields" (cslice
          (sdict "name" (or .User.Globalname .User.Username) "value" (reReplace "," (print "> ~~" (humanizeThousands $PtsFU) "~~ › **" (humanizeThousands (sub $PtsFU $VirAmt)) "**") " ") "inline" true)
          (sdict "name" "** › **" "value" " " "inline" true)
          (sdict "name" (or (getMember $DUsr).User.Globalname (getMember $DUsr).User.Username) "value" (reReplace "," (print "> ~~" (humanizeThousands $PtsDU) "~~ › **" (humanizeThousands (add $PtsDU $VirAmt)) "**") " ") "inline" true)
      )}}
      {{$embed2 := cembed "color" 0xda373c
          "title" "Attention !"
          "footer" (sdict "text" (print "Le plafond du destinataire a été atteint. Le montant de la transaction a donc été tronqué à " (reReplace "," (humanizeThousands $VirAmt) " ") " Points pour ne pas dépasser le plafond."))
      }}

      {{$toSend := cslice $embed}}
      {{if and (ge (add $PtsDU $VirAmt) $PtPlaf) (not (getMember $DUsr).User.Bot) (not (in $ImDB.NoPlaf $DUsr))}} {{$toSend = $toSend.Append $embed2}} {{end}}

      {{sendMessage nil (complexMessage "embed" $toSend)}}

      {{$plural := ""}} {{if gt $VirAmt 1}} {{$plural = "s"}} {{end}}
      {{sendMessage 1135570896959066112 (print .User.Mention " a transféré **" (reReplace "," (humanizeThousands $VirAmt) " ") " Point" $plural "** à <@" $DUsr ">")}}

      {{if $FUv2}} {{sendMessage 1180340984626806884 (print $FMbr.User.Mention " (`" (or $FMbr.Member.Nick $FMbr.User.Globalname $FMbr.User.String) " - " $FUsr "`) a migré son solde de Points · Solde au moment de la migration : " (reReplace "," (humanizeThousands (sub $PtsFU $VirAmt)) " ") " Points **(via -transfer)**")}} {{end}}
      {{if $DUv2}} {{sendMessage 1180340984626806884 (print $DMbr.User.Mention " (`" (or $DMbr.Member.Nick $DMbr.User.Globalname $DMbr.User.String) " - " $DUsr "`) a migré son solde de Points · Solde au moment de la migration : " (reReplace "," (humanizeThousands (add $PtsDU $VirAmt)) " ") " Points **(via -transfer)**")}} {{end}}

    {{else}} {{$EC = 12}} {{end}}
  {{else}}
    {{if eq $DUsr $FUsr}} {{$EC = 3}}
    {{else if le ($args.Get 1) 0}} {{$EC = 4}}
    {{else if lt $PtsFU ($args.Get 1)}} {{$EC = 5}}
    {{else if not $FUsrIsLv10orHigher}} {{$EC = 6}}
    {{else if not $DUsrIsLv10orHigher}} {{$EC = 7}}
    {{else if $FrozAcFU}} {{$EC = 8}}
    {{else if $FrozAcDU}} {{$EC = 9}}
    {{else if and $FUv2 $DUv2}} {{$EC = 10}}
    {{else if $IsBot}} {{$EC = 11}} {{end}}
  {{end}}
{{else}}
  {{if not $FMbr}} {{$EC = 1}}
  {{else}} {{$EC = 2}} {{end}}
{{end}}

{{$EMText := cslice
  "Err0"
  "L'ID du compte débiteur n'est pas présent sur le serveur"
  "L'ID du compte créditeur n'est pas présent sur le serveur"
  "Les ID des comptes débiteur et créditeur sont identiques (tu voulais vraiment essayer, hein ?)"
  "Le montant du transfert est invalide (Margoulin va !)"
  "Solde de Points insuffisant"
  "Rank insuffisant (Niveau 10+)"
  "Le destinataire n'a pas le rank requis (Niveau 10+)"
  "Le compte débiteur est gelé"
  "Le compte créditeur est gelé"
  "Tentative de transfert entre deux comptes non migrés au Système V3"
  "Le destinataire est un bot"
  "Le destinataire a atteint son plafond de Points"
}}
{{if ne $EC 0}} {{sendMessage nil (print ">>> **Erreur :**\nAction refusée : " (index $EMText $EC) ".\n-# *Erreur " $EC "*")}} {{end}}