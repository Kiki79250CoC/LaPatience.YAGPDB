{{deleteTrigger 0}}
{{$args := parseArgs 1 (print "`" .ServerPrefix .CCTrigger " ‚Äπ#‚Ä∫ ‚Äπ\"Text\" or @UserOrID‚Ä∫`") (carg "int" "BuyID") (carg "string" "Arg")}}
{{$ImDB := (dbGet 0 "ImmunDB").Value}}
{{$BIDD := reReplace " " ($BIDC := print "Buy " ($BID := $args.Get 0)) ""}}
{{$UTS := currentTime.Unix}}
{{$Arg := or ($args.Get 1) ""}}
{{$ChG := 496010398848253965}}
{{$ChB := 1168339319124131871}}
{{$RB := 967187787260518440}}
{{$RG := 1276161103168274504}}
{{$RS := 506417754878902272}}
{{$UM :=  print "<@" ($IDS := str ($UID := .User.ID)) ">"}}
{{$DM := ($EC := ($VIP := ($BOKCldw := ($a := ($b := ($c := ($r := ($GMsg := ($BMsg := "")))))))))}}
{{$SldS := (or (dbGet $UID "SancProfile").Value (sdict )).ActiveWarns.FrzSld}}

{{$prLst := dict 1 1  2 200  3 200  4 1000  11 25  12 50  13 1200  14 100  15 200  16 600  17 1000  18 50  21 150  22 15  23 150  24 200  25 500  26 1500  27 800  31 15  32 100  33 50  34 400  35 1200  36 700  41 150  42 150  43 300  44 500  45 700  46 900  47 1000  48 3000  49 5000  50 10000}}
{{$pr := or ($prLst.Get $BID) -1}}

{{$uPts := or (toInt (dbGet $UID "Points").Value) 0}}

{{$PtPlaf := index $ImDB.PlafLmt 0}}
{{range $ID, $r := (cslice 967188575005315132 1079418386511040572)}}
  {{if in $.Member.Roles $r}}
    {{$PtPlaf = index $ImDB.PlafLmt (add $ID 1)}}
    {{if and (not (in (seq 11 18) $BID)) (ge $pr 150)}} {{$VIP = print " **(" (index (cslice "<:VIP1_v2:1080311093785788507> VIP1" "<:VIP2_v2:1080311144285229106> VIP2") $ID) " ¬∑ " (humanizeThousands $pr) " -" (index (cslice 7 15) $ID) " %)**"}} {{$pr = toInt (mult (toFloat $pr) (index (cslice 0.93 0.85) $ID))}} {{end}} {{break}}
  {{end}}
{{end}}

{{$Cldw := cslice 1 2 13 16 17 42 46}} {{$TCld := cslice 14 42}}
{{if in $Cldw $BID}} {{$BOKCldw = dbGet $UID $BIDD}} {{end}}

{{if in (cslice 3 14 21 22 33 42 47) $BID}} {{if $Arg}} {{if $a = getMember (or $Arg 0)}} {{if not $a.User.Bot}} {{$b = $a.Roles}} {{$a = $a.User.ID}} {{if in $TCld $BID}} {{if $BOKCldw = dbGet $a $BIDD}} {{$EC = 21}} {{end}} {{end}} {{if in (cslice 14 21 22) $BID}} {{if or (in $b $RG) (in $b $RS)}} {{$EC = 12}} {{end}} {{end}} {{else}} {{$EC = 11}} {{end}} {{else}} {{if ne $BID 33}} {{$EC = 11}} {{end}} {{end}} {{else}} {{$EC = 10}} {{if eq $BID 33}} {{$EC = 15}} {{end}} {{end}}
{{else if in (cslice 4 18 31 32 34) $BID}} {{if hasRole ($r = (dict 4 1098981009774628886 18 1236668311517925376 31 784090664580415508 32 1030956478384832664 34 998383449008246824).Get $BID)}} {{$EC = 14}} {{end}}
{{else if in (cslice 15 16 25 43 44 45 50) $BID}} {{if dbGet $BID "Buy"}} {{$EC = 9}} {{end}}
{{else if eq $BID 17}} {{if dbGet $UID "MsgLuck"}} {{$EC = 9}} {{end}}
{{end}}

{{if and (not (eq $pr -1)) (not (in ($UItems := $ImDB.BUItems) $BID)) (not (in ($DItems := $ImDB.BDItems) $BID)) (le $pr $uPts) (not ($AcFrz := lt $UTS (toInt $SldS.ExpiresAt))) (or (in $ImDB.NoPlaf $UID) (le $uPts $PtPlaf)) (not $BOKCldw) (not $EC)}}
  {{$DM = "Achat effectu√© avec succ√®s !"}}

  {{if eq $BID 1}} {{if not (dbGet $BID "Buy")}} {{addRole 985645140699918356}} {{$DM = print "Bravo ! Tu repars avec le badge du " $BIDC " üé≤."}} {{$BMsg = $UM}} {{dbSetExpire $BID "Buy" 0 (randInt 237600 388800)}} {{end}}
  {{else if eq $BID 3}} {{takeRole (toInt (dbGet $BID "Buy").Value) ($r = 1187580089064509611)}} {{giveRole $a $r}} {{dbSet $BID "Buy" (str $a)}}
  {{else if eq $BID 4}} {{if dbGet $BID "Buy"}} {{addRole $r}} {{else}} {{$EC = 13}} {{end}}

  {{else if and (eq $BID 11) (eq (randInt 150) 69)}} {{$uPts = add $uPts 1525}} {{$GMsg = print "Bien jou√© " $UM ", tu viens de gagner **1 500 Points** √† la Loterie !"}}
  {{else if eq $BID 12}} {{$uPts = add $uPts ($loto := randInt 101)}} {{$DM = print "Tu as gagn√© " $loto " Points."}}
  {{else if and (eq $BID 13) (eq (randInt 2) 1)}} {{$uPts = add $uPts 2200}} {{$GMsg = print "Bien jou√© " $UM ", tu viens de gagner **1 000 Points** avec le " $BIDC " !"}}
  {{else if eq $BID 14}} {{$Text := print "fi√© <@" $a ">"}} {{if $r = eq $UID $a}} {{$Text = "cid√© de jouer pour son compte"}} {{end}} {{$Rslt := "gagn√© 100 Points ! Pfiou !"}} {{if eq (randInt 6) 4}} {{$Rslt = "perdu. √Ä dans 2 heures donc."}} {{execCC 320 $ChG 0 (sdict "SancUsr" $a "SancRes" $BIDC "SancDur" "2h" "IsTroll" true)}} {{else}} {{if $r}} {{$uPts = add $uPts 100}} {{else}} {{$p := dbIncr $a "Points" 100}} {{end}} {{end}} {{$GMsg = print $UM " a d√©" $Text " √† la roulette russe.\n<@" $a "> presse la d√©tente et‚Ä¶ a " $Rslt}}
  {{else if eq $BID 16}} {{dbSet $BID "Buy" (cslice $UID ($a = 30))}} {{$DM = print $DM "\nLa magie op√©rera dans " $a " secondes‚Ä¶"}}
  {{else if eq $BID 17}} {{$MsgIDs := cslice (randInt 1 4) 0 0 0}} {{sendMessage $ChG (print "## " $BIDC " ¬∑ Alors " $UM ", c'est lequel le bon message ?")}} {{range (seq 1 4)}} {{$MsgIDs.Set . ($Msg := sendMessageRetID $ChG (print "Message " .))}} {{addMessageReactions $ChG $Msg "‚úÖ"}} {{end}} {{dbSetExpire $UID "MsgLuck" $MsgIDs 86400}}
  {{else if in (cslice 18 31 32 34) $BID}} {{addRole $r}} {{removeRole $r (or ((dict 18 86400 34 259200).Get $BID) 0)}}

  {{else if in (seq 21 28) $BID}}
    {{if $Bomb := (dbGet 0 "Bomb").Value}}
      {{with $Bomb}} {{if gt (sub .TrigTS $UTS) 0}}
        {{if eq $BID 22}} {{$UL := .Usr}} {{giveRole $a $RB}} {{if .UsrStk}} {{if not (in .Usr $a)}} {{$r = print "propag√©e √† <@" $a ">"}} {{$UL = $UL.Append $a}} {{$UL.Set 0 (sub (len $UL) 1)}} {{else}} {{$EC = 20}} {{end}} {{else}} {{$r = print "relay√©e √† <@" $a ">"}} {{takeRole (toInt (index $UL 1)) $RB}} {{$UL.Set 1 $a}} {{end}} {{.Set "Usr" $UL}}
        {{else if eq $BID 23}} {{$r = "d√©p√©ch√©e de 1 minute"}} {{.Set "TrigTS" (sub .TrigTS 60)}}
        {{else if eq $BID 24}} {{$r = "renforc√©e de 10 minutes"}} {{.Set "ScTime" (add .ScTime 600)}}
        {{else if in (cslice 25 26 27) $BID}} {{if or (and (ne $BID 27) (not .TrailS) (not ($u := .UsrStk))) (and (eq $BID 27) (not .TrAUsr) $u)}} {{$r = print "am√©lior√©e par " $BIDC}} {{.Set ((dict 25 "TrailS" 26 "UsrStk" 27 "TrAUsr").Get $BID) true}} {{else}} {{$EC = 19}} {{end}} {{end}}
        {{if ne $BID 21}} {{dbSet 0 "Bomb" .}} {{$c = print "-# Elle se verrouillera dans " (reReplace "nd" (reReplace "and" (humanizeDurationSeconds (mult (sub .TrigTS $UTS) 1000000000)) "et") "nde") "."}} {{if le (sub .TrigTS $UTS) 0}} {{$c = "-# Bombe **verrouill√©e** !"}} {{end}} {{else}} {{$EC = 16}} {{end}}
      {{else}} {{$EC = 18}} {{end}} {{end}}
    {{else}} {{if eq $BID 21}} {{giveRole $a $RB}} {{$br = print "largu√©e sur <@" $a "> par " $UM}} {{dbSet 0 "Bomb" (sdict "Usr" (cslice 1 $a) "TrigTS" (add $UTS (randInt 300 901)) "ScTime" 300)}} {{else}} {{$EC = 17}} {{end}} {{end}}
    {{if not $EC}} {{$GMsg = print "## üí£ **La Sainte Bombe** a √©t√© **" $r "** par " $UM ".\n" $c}} {{end}}

  {{else if eq $BID 33}} {{$GMsg = reReplace .LinkRegex $Arg "[###]"}} {{range (cslice $ChB 693795482639794276)}} {{sendMessage . (print $BIDC " : " $UM " ¬∑ " $Arg)}} {{end}} {{$UM = "**Quelqu'un**"}}
  {{else if eq $BID 42}} {{execCC 266 $ChB 0 (dict "M" 0 "UID" $a "By" $UID)}}
  {{else if eq $BID 43}} {{if dbGet 4 "Buy"}} {{dbSet $BID "Buy" $IDS}} {{else}} {{$EC = 13}} {{end}}
  {{else if eq $BID 44}} {{dbSet $BID "Buy" 3}} {{$GMsg = print "C'est l'heure de faire boom-boom ! (" $BIDC ")"}}
  {{else if in (cslice 45 50) $BID}} {{dbSet $BID "Buy" (cslice $UID ($a = toInt (print $BID "001")))}} {{scheduleUniqueCC 290 $ChB ((dict 45 60  50 600).Get $BID) $UTS (dict "Buyer" $UID "DataLoc" $a "FromBID" $BID "SancDur" ((dict 45 120  50 3600).Get $BID))}}
  {{else if eq $BID 47}} {{dbSet $a $BIDD 900}} {{$GMsg = print $UM " a d√©cid√© de r√©duire <@" $a "> au silence 15 minutes."}} {{$BMsg = print $UM " (Acheteur) ¬∑ <@" $a "> (Victime)"}}
  {{end}}

  {{if $GMsg}} {{sendMessage $ChG $GMsg}} {{end}}
  {{if $BMsg}} {{sendMessage $ChB (print $BMsg "\n-#" $BIDC)}} {{end}}

  {{if in $TCld $BID}} {{dbSetExpire $a $BIDD 0 (or ((dict 42 1800).Get $BID) 86400)}} {{end}}
  {{if in $Cldw $BID}} {{dbSetExpire $UID $BIDD 0 (or ((dict 1 3600  13 1800  16 7200  46 1800).Get $BID) 86400)}} {{end}}

  {{if not $EC}}
    {{dbSet $UID "Points" (sub $uPts $pr)}}
    {{$s := ""}} {{if gt $pr 1}} {{$s = "s"}} {{end}}
    {{sendMessage 783745583785181214 (reReplace "," (print (or ((dict 2 "üü£" 35 "üü£" 36 "üü£" 41 "üî¥" 46 "üî¥" 48 "‚öôÔ∏è" 49 "üî¥").Get $BID) "‚ö™") " Item : **" $BID "** ¬∑ Acheteur : " $UM "\n-# Prix : **" (humanizeThousands $pr) " Point" $s "**" $VIP) " ")}}
    {{dbSet $UID "Buy" (sdict "UserPts" $uPts "ItemID" $BID "Price" $pr)}}
  {{end}}

{{else}}
  {{if not $EC}} {{range $ID, $C := (cslice (eq $pr -1) (in $UItems $BID) (in $DItems $BID) (gt $pr $uPts) $AcFrz (gt $uPts $PtPlaf) $BOKCldw)}} {{if $C}} {{$EC = add $ID 1}} {{break}} {{end}} {{end}} {{end}}
  {{if in (cslice 7 21) $EC}} {{$a = reReplace "our" (reReplace "ond" (reReplace "and" (humanizeDurationSeconds (print (sub $BOKCldw.ExpiresAt.Unix $UTS) "s")) "et") "onde") "eure"}} {{end}}
{{end}}

{{$EMList := cslice "" (print "Item **#" $BID "** inexistant") "Item indisponible" "Item d√©sactiv√©" "Solde insuffisant" "Compte en banque gel√©" "Solde de points trop √©lev√©" (print "Item soumis √† un cooldown. Vous pourrez l'utiliser dans **" $a "**") 0 (print "Un " $BIDC " est d√©j√† actif") "Aucune cible d√©finie" "ID fourni invalide" "La cible est Sanctionn√©e/au Goulag" "La Boutique L√©gendaire n'est pas active" "Vous avez d√©j√† le r√¥le" "Aucun message d√©fini" "Bombe d√©j√† active" "Aucune bombe en cours" "Bombe sur le point d'exploser, aucune action possible" "Am√©lioration inapplicable" "Cible d√©j√† affect√©e par la bombe" (print "Cible immunis√©e. Fin de l'immunit√© dans **" $a "**")}}

{{if $EC}} {{$DM = print ">>> **Erreur :**\nImpossible de proc√©der √† l'achat : " (index $EMList $EC) ".\n-# *Erreur " $EC "*"}} {{end}}
{{sendDM $DM}}