{{$args := parseArgs 1 "`-ban ‚Äπ@UserOrID‚Ä∫ \"‚ÄπReason‚Ä∫\" ‚ÄπDuration‚Ä∫ ‚ÄπOptArg‚Ä∫`\n\nOptional Arguments :\n`--silent`\n`--ignore-security-checks`" (carg "userid" "banUID") (carg "string" "banRes") (carg "string" "banDur") (carg "string" "OptArg")}}
{{$chnSanc := 515972308645707777}}
{{$chnMine := 925172096252936223}}
{{$silentB := false}}
{{$isTroll := false}}
{{$valPass := false}}
{{$unlkSec := false}}
{{$banUID := $args.Get 0}}
{{$banRes := or ($args.Get 1) "Aucune raison fournie"}}
{{$banDur := or ($args.Get 2) "√† **dur√©e ind√©termin√©e**"}}
{{$optArg := or ($args.Get 3) ""}}
{{$banMod := .User.ID}}
{{$banLmt := 5}}

{{$trappedIDs := cslice 223894107016134656}}
{{$readableBanDur := (reReplace "second" (reReplace "hour" (reReplace "day" (reReplace "week" (reReplace "month" (reReplace "year" (reReplace "and" (humanizeDurationSeconds $banDur) "et") "an") "mois") "semaine") "jour") "heure") "seconde")}}

{{if (reFind `\b--silent\b` $.Message.Content)}} {{$silentB = true}} {{end}}
{{if (reFind `\b--ignore-security-checks\b` $.Message.Content)}}
  {{if or (in (cslice 223894107016134656 369101917659332611) $banMod) (targetHasRoleID $banMod 931351059455164477)}} {{$unlkSec = true}}
  {{else}} {{sendMessage nil ">>> **Erreur :**\n`[FrostGuard Error]` Vous n'avez pas les permissions requises pour utiliser cet argument."}} {{return}} {{end}}
{{end}}
{{if (reFind `(?i)(\bBuy\s*25\b)` $banRes)}} {{$isTroll = true}} {{end}}

{{$sText := ""}}
{{if $silentB}} {{$sText = "silencieusement "}}
  {{if not (eq (lower $banRes) "--silent")}} {{$banRes = or ($args.Get 1) "Aucune raison fournie"}} {{else}} {{$banRes = "Aucune raison fournie"}} {{end}}
  {{if not (eq (lower $banDur) "--silent")}} {{$banDur = or ($args.Get 2) "√† **dur√©e ind√©termin√©e**"}} {{else}} {{$banDur = "√† **dur√©e ind√©termin√©e**"}} {{end}}
{{end}}

{{if $unlkSec}}
  {{if not (eq (lower $banRes) "--ignore-security-checks")}} {{$banRes = or ($args.Get 1) "Aucune raison fournie"}} {{else}} {{$banRes = "Aucune raison fournie"}} {{end}}
  {{if not (eq (lower $banDur) "--ignore-security-checks")}} {{$banDur = or ($args.Get 2) "√† **dur√©e ind√©termin√©e**"}} {{else}} {{$banDur = "√† **dur√©e ind√©termin√©e**"}} {{end}}
{{end}}

{{if lt ($modDailyBanCount := or (toInt (dbGet $banMod "DailyBan").Value) 0) $banLmt}}
  {{$usrSpec := " "}} {{$usrStr := print "`" $banUID "`"}}
  {{if getMember $banUID}}
    {{if not (and (in $trappedIDs $banUID) (targetHasRoleID $banUID 496010603601854464) (targetHasRoleID $banUID 628276701796892702) (getMember $banUID).User.Bot (eq $banUID $banMod))}} {{$valPass = true}} {{end}}
    {{$usrSpec = (print "***" (getMember $banUID).User.String "***\n" (or (print "" (getMember $banUID).User.Globalname "") "<:Nothing:1066734470151024830>--"))}}
    {{if ((getMember $banUID).Nick)}} {{$usrSpec = (print $usrSpec "\n*" (getMember $banUID).Nick "*")}} {{end}}
    {{$usrStr = (getMember $banUID).User.Username}}
  {{end}}

  {{if or (and $unlkSec (not (in $trappedIDs $banUID))) (or $valPass (not (getMember $banUID)))}}
    {{if not $isTroll}}
      {{$banCount := add (or (dbGet $banUID "BanCount").Value 0) 1}}

      {{$durationText := $banDur}} {{$durationTextLog := "Ind√©termin√©e"}}
      {{if not (eq $banDur "√† **dur√©e ind√©termin√©e**")}} {{$durationText = print "de **" $readableBanDur "**"}} {{$durationTextLog = $readableBanDur}} {{end}}

      {{$aTimer := ""}} {{$jump := ""}}
      {{if (targetHasRoleID $banUID 506417754878902272)}} {{$aTimer = print " **le** <t:" currentTime.Unix ":f>"}} {{$jump = "\n\n"}} {{end}}

      {{$toSet := print $jump "> **Banni(e) " $sText "par** <@" $banMod ">" $aTimer "\n> **Raison :** " $banRes "\n> **Dur√©e :** " $durationTextLog}}

      {{if $dbLastSanc := dbGet $banUID "LastSanc"}}
        {{if (targetHasRoleID $banUID 506417754878902272)}} {{$toSet = print (index $dbLastSanc.Value 0) $toSet}} {{end}}
        {{dbSet $banUID "LastSanc" (cslice (joinStr "‚ùñ" currentTime.Unix $toSet) (index $dbLastSanc.Value 0) (index $dbLastSanc.Value 1))}}
      {{else}} {{dbSet $banUID "LastSanc" (cslice $toSet 0 0)}} {{end}}

      {{if not $silentB}}
        {{$embed := cembed "color" 0xAC0000
          "title" (print "üßæ ‚ñ∏ Compte rendu ¬∑ Bannissement de " $usrStr)
          "fields" (cslice
              (sdict "name" " " "value" " " "inline" false)

            (sdict "name" "ü™™  ‚Ä¢  Membre" "value" (print ">>> <@" $banUID ">\nID : `" $banUID "`") "inline" true)
            (sdict "name" "\b" "value" $usrSpec "inline" true)
              (sdict "name" " " "value" " " "inline" false)

            (sdict "name" "‚ãÑ  Sanction" "value" (print "> " "Bannissement <:ban:1054840260179279882> **(" $banCount ")** " $durationText) "inline" false)
            (sdict "name" "‚ãÑ  Raison" "value" (print "> " $banRes) "inline" false)
              (sdict "name" " " "value" " " "inline" false)

          ) "footer" (sdict "text" (print "Sanction prononc√©e par " (getMember $banMod).User.String))
          "timestamp" currentTime}}
        {{sendMessage $chnSanc $embed}}
      {{end}}

      {{dbSet $banUID "BanCount" $banCount}}
      {{dbSet $banMod "DailyBan" (add $modDailyBanCount 1)}}

      {{if dbGet $banUID "AvPreBan"}} {{dbDel $banUID "AvPreBan"}} {{end}}

    {{else}} {{sendMessage $chnMine (print ">>> **Pseudo :** <@" $banUID ">\n**Sanction :** <:ban:1054840260179279882>\n**Raison :** " $banRes "\n**Dur√©e :** " $readableBanDur "\n\n**Banned by** <@" $banMod ">")}} {{end}}

    {{if not (eq $banDur "√† **dur√©e ind√©termin√©e**")}} {{execAdmin "ban" $banUID (print "Banni(e) " $sText $readableBanDur " par " (getMember $banMod).User.Username " ¬∑ " $banRes) $banDur}}
    {{else}} {{execAdmin "ban" $banUID (print "Banni(e) " $sText " √† dur√©e ind√©termin√©e par " (getMember $banMod).User.Username " ¬∑ " $banRes) 0}} {{end}}

  {{else}} {{sendMessage nil ">>> **Erreur :**\n`[FrostGuard Error]` Vous n'√™tes pas autoris√© √† effectuer cette action."}} {{end}}
{{else}} {{sendMessage nil (print "**Erreur :**\nVous avez atteint votre plafond de " $banLmt " bannissements aujourd'hui.")}} {{end}}